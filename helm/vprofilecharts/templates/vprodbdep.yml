apiVersion: apps/v1
kind: Deployment
metadata:
  name: vprodb
  labels:
    app: vprodb
spec:
  selector:
    matchLabels:
      app: vprodb
  replicas: {{ .Values.DB.Replicas }}
  template: 
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "vprofile"
        vault.hashicorp.com/agent-inject-secret-database-config.sh: "internal/data/database/config"
        vault.hashicorp.com/agent-inject-template-database-config.sh: |
          {{`{{- with secret `}}"internal/data/database/config"{{` -}}`}}
            MYSQL_ROOT_PASSWORD="{{`{{ .Data.data.password }}`}}"
          {{`{{- end }}`}}
      labels:
        app: vprodb
    spec:
      serviceAccountName: vprosa
      volumes:
        - name: vault-secrets
          emptyDir: {}
        - name: env-vars
          emptyDir: {}
      initContainers:
        - name: env-var-prep
          image: alpine
          command: ['sh', '-c', 'cp /vault/secrets/database-config.yaml /env-vars/database-config.sh']
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
            - name: env-vars
              mountPath: /env-vars
      containers:
        - name: vprodb
          image: "{{ .Values.Global.Repository }}/{{ .Values.DB.Image }}:{{ .Values.DB.Tag }}"
          ports:
            - name: vprodb-port
              containerPort: {{ .Values.DB.Port }}
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
            - name: env-vars
              mountPath: /env-vars
          command: ["/bin/sh", "-c"]
          args: ["chmod +x /vault/secrets/database-config.sh && source /env-vars/database-config.sh && docker-entrypoint.sh mysqld"]
        # command:
        # - tail
        # - "-f"
        # - /dev/null # this keeps the container running