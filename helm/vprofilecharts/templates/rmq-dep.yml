apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpromq01
  labels:
    app: vpromq01
spec:
  selector:
    matchLabels:
      app: vpromq01
  replicas: {{ .Values.RMQ.Replicas }}
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "vprofile"
        vault.hashicorp.com/agent-inject-secret-rmq-config.yaml: "internal/data/rmq/config"
        vault.hashicorp.com/agent-inject-template-rmq-config.yaml: |
          {{`{{- with secret `}}"internal/data/rmq/config"{{` -}}`}}
            RABBITMQ_DEFAULT_PASS="{{`{{ .Data.data.password }}`}}"
            RABBITMQ_DEFAULT_USER="{{`{{ .Data.data.username }}`}}"
          {{`{{- end }}`}}
      labels:
        app: vpromq01
    spec:
      serviceAccountName: vprosa
      containers:
      - name: vpromq01
        image: "{{ .Values.Global.Repository }}/{{ .Values.RMQ.Image }}:{{ .Values.RMQ.Tag }}"
        ports:
        - name: vpromq01-port
          containerPort: {{ .Values.RMQ.Port }}
        command: ["/bin/sh", "-c"]
        args: ["chmod +x /vault/secrets/rmq-config.sh && . /vault/secrets/rmq-config.sh && export RABBITMQ_DEFAULT_USER RABBITMQ_DEFAULT_PASS && docker-entrypoint.sh rabbitmq-server"]

        # command:
        # - tail
        # - "-f"
        # - /dev/null # this keeps the container running